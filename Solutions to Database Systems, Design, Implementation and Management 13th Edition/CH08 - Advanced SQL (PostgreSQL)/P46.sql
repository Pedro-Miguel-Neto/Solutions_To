CREATE OR REPLACE FUNCTION trg_func_cust_balance()
	RETURNS TRIGGER
	LANGUAGE PLPGSQL
AS $$
BEGIN
	UPDATE CHARTER
	SET CHAR_WAIT_CHG = MOD_WAIT_CHG
	FROM MODEL
	WHERE MODEL.MOD_CODE = (SELECT AIRCRAFT.MOD_CODE FROM AIRCRAFT WHERE AIRCRAFT.AC_NUMBER = CHARTER.AC_NUMBER);

	UPDATE CHARTER
	SET CHAR_FLT_CHG_HR = MOD_CHG_MILE
	FROM MODEL
	WHERE MODEL.MOD_CODE = (SELECT AIRCRAFT.MOD_CODE FROM AIRCRAFT WHERE AIRCRAFT.AC_NUMBER = CHARTER.AC_NUMBER);

	UPDATE CHARTER
	SET CHAR_FLT_CHG = CHAR_HOURS_FLOWN * CHAR_FLT_CHG_HR;

	UPDATE CHARTER
	SET	CHAR_TAX_CHG = CHAR_FLT_CHG * 0.08;

	UPDATE CHARTER
	SET	CHAR_TOT_CHG = CHAR_FLT_CHG + CHAR_TAX_CHG;

	CASE TG_OP
	WHEN 'INSERT' THEN
		UPDATE CUSTOMER
		SET CUS_BALANCE = CUS_BALANCE + CHAR_TOT_CHG
		FROM CHARTER
		WHERE CUSTOMER.CUS_CODE = NEW.CUS_CODE AND CHARTER.CHAR_TRIP = NEW.CHAR_TRIP;
		RAISE NOTICE 'trg_cust_balance was triggered - ON INSERT';
	WHEN 'DELETE' THEN
		UPDATE CUSTOMER
		SET CUS_BALANCE = CUS_BALANCE - OLD.CHAR_TOT_CHG
		FROM CHARTER
		WHERE CUSTOMER.CUS_CODE = OLD.CUS_CODE;
		RAISE NOTICE 'trg_cust_balance was triggered - ON DELETE';
	ELSE
      	RAISE EXCEPTION 'This trigger function expects INSERT or UPDATE!';
	END CASE;
	RETURN NEW;
END;
$$;

CREATE OR REPLACE TRIGGER trg_cust_balance
AFTER INSERT OR DELETE ON CHARTER
FOR EACH ROW
EXECUTE PROCEDURE trg_func_cust_balance();