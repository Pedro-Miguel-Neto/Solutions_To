CREATE OR REPLACE FUNCTION trg_func_late_return()
	RETURNS TRIGGER
	LANGUAGE PLPGSQL
AS $$
BEGIN
	IF new.DETAIL_RETURNDATE IS NULL THEN
		new.DETAIL_DAYS_LATE = NULL;
	ELSE
		IF new.DETAIL_RETURNDATE::DATE - new.DETAIL_DUEDATE > 0 AND 
			new.DETAIL_RETURNDATE::TIME > INTERVAL '12H' THEN
				new.DETAIL_DAYS_LATE = new.DETAIL_RETURNDATE::DATE - new.DETAIL_DUEDATE
		ELSE
			new.DETAIL_DAYS_LATE = 0
		END IF;
	END IF;

	RAISE NOTICE 'trg_late_return was triggered - days late = ', new.DETAIL_RETURNDATE::DATE - new.DETAIL_DUEDATE;

	RETURN NEW;
END; 
$$;

CREATE OR REPLACE TRIGGER trg_late_return
BEFORE UPDATE OF DETAIL_RETURNDATE, DETAIL_DUEDATE
ON DETAILRENTAL
FOR EACH ROW
EXECUTE PROCEDURE trg_func_late_return();


CREATE OR REPLACE FUNCTION trg_func_late_return()
	RETURNS TRIGGER
	LANGUAGE PLPGSQL
AS $$
BEGIN
	IF new.DETAIL_RETURNDATE IS NULL THEN
		UPDATE DETAILRENTAL
		SET DETAIL_DAYS_LATE = NULL
		WHERE DETAILRENTAL.RENT_NUM = new.RENT_NUM AND DETAILRENTAL.VID_NUM = new.VID_NUM;
	ELSE
		IF new.DETAIL_RETURNDATE::DATE - new.DETAIL_DUEDATE > 0 AND 
			new.DETAIL_RETURNDATE::TIME > INTERVAL '12H' THEN
				UPDATE DETAILRENTAL
				SET DETAIL_DAYS_LATE = new.DETAIL_RETURNDATE::DATE - new.DETAIL_DUEDATE
				WHERE DETAILRENTAL.RENT_NUM = new.RENT_NUM AND DETAILRENTAL.VID_NUM = new.VID_NUM;
		ELSE
			UPDATE DETAILRENTAL
			SET DETAIL_DAYS_LATE = 0
			WHERE DETAILRENTAL.RENT_NUM = new.RENT_NUM AND DETAILRENTAL.VID_NUM = new.VID_NUM;
		END IF;
	END IF;

	RAISE NOTICE 'trg_late_return was triggered - days late = ', new.DETAIL_RETURNDATE::DATE - new.DETAIL_DUEDATE;

	RETURN NEW;
END; 
$$;

CREATE OR REPLACE TRIGGER trg_late_return
AFTER UPDATE OF DETAIL_RETURNDATE, DETAIL_DUEDATE
ON DETAILRENTAL
FOR EACH ROW
EXECUTE PROCEDURE trg_func_late_return();

